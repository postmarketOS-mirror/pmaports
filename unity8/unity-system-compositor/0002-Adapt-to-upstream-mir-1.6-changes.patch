From f9090773c22714c6a5f72cd3da250df5f81541ca Mon Sep 17 00:00:00 2001
From: Marius Gripsgard <marius@ubports.com>
Date: Sat, 16 Nov 2019 17:46:26 +0100
Subject: [PATCH 2/3] Adapt to upstream mir 1.6 changes

---
 src/mir_screen.cpp                         | 10 ++-
 src/mir_screen.h                           |  7 +-
 src/session_monitor.h                      |  8 +--
 src/session_switcher.cpp                   |  6 +-
 src/session_switcher.h                     |  4 +-
 src/window_manager.cpp                     |  2 +-
 tests/unit-tests/test_session_switcher.cpp | 76 ++++++++++++----------
 7 files changed, 64 insertions(+), 49 deletions(-)

diff --git a/src/mir_screen.cpp b/src/mir_screen.cpp
index 88daa52..c33783a 100644
--- a/src/mir_screen.cpp
+++ b/src/mir_screen.cpp
@@ -216,13 +216,13 @@ void usc::MirScreen::base_configuration_updated(
 }
 
 void usc::MirScreen::session_configuration_applied(
-    std::shared_ptr<mir::frontend::Session> const&,
+    std::shared_ptr<mir::scene::Session> const&,
     std::shared_ptr<mir::graphics::DisplayConfiguration> const&)
 {
 }
 
 void usc::MirScreen::session_configuration_removed(
-    std::shared_ptr<mir::frontend::Session> const&)
+    std::shared_ptr<mir::scene::Session> const&)
 {
 }
 
@@ -238,6 +238,12 @@ void usc::MirScreen::catastrophic_configuration_error(
 {
 }
 
+void usc::MirScreen::configuration_updated_for_session(
+    std::shared_ptr<mir::scene::Session> const&,
+    std::shared_ptr<mir::graphics::DisplayConfiguration const> const&)
+{
+}
+
 void usc::MirScreen::set_power_mode(MirPowerMode mode, SetPowerModeFilter const& filter)
 try
 {
diff --git a/src/mir_screen.h b/src/mir_screen.h
index 560b219..be94a5a 100644
--- a/src/mir_screen.h
+++ b/src/mir_screen.h
@@ -58,16 +58,19 @@ public:
     void base_configuration_updated(
         std::shared_ptr<mir::graphics::DisplayConfiguration const> const&) override;
     void session_configuration_applied(
-        std::shared_ptr<mir::frontend::Session> const&,
+        std::shared_ptr<mir::scene::Session> const&,
         std::shared_ptr<mir::graphics::DisplayConfiguration> const&) override;
     void session_configuration_removed(
-        std::shared_ptr<mir::frontend::Session> const&) override;
+        std::shared_ptr<mir::scene::Session> const&) override;
     void configuration_failed(
         std::shared_ptr<mir::graphics::DisplayConfiguration const> const&,
         std::exception const&) override;
     void catastrophic_configuration_error(
         std::shared_ptr<mir::graphics::DisplayConfiguration const> const&,
         std::exception const&) override;
+    void configuration_updated_for_session(
+        std::shared_ptr<mir::scene::Session> const&,
+        std::shared_ptr<mir::graphics::DisplayConfiguration const> const&) override;
 
 private:
     using SetPowerModeFilter = bool(*)(mir::graphics::UserDisplayConfigurationOutput const&);
diff --git a/src/session_monitor.h b/src/session_monitor.h
index d5d1d4d..8b3d894 100644
--- a/src/session_monitor.h
+++ b/src/session_monitor.h
@@ -24,7 +24,7 @@
 #include <memory>
 #include <string>
 
-namespace mir { namespace frontend { class Session; }};
+namespace mir { namespace scene { class Session; }};
 
 namespace usc
 {
@@ -37,7 +37,7 @@ public:
     virtual void show() = 0;
     virtual void hide() = 0;
     virtual void raise_and_focus() = 0;
-    virtual bool corresponds_to(mir::frontend::Session const*) = 0;
+    virtual bool corresponds_to(mir::scene::Session const*) = 0;
 
 protected:
     Session() = default;
@@ -49,8 +49,8 @@ class SessionMonitor
 {
 public:
     virtual void add(std::shared_ptr<Session> const& session, pid_t pid) = 0;
-    virtual void remove(std::shared_ptr<mir::frontend::Session> const& session) = 0;
-    virtual void mark_ready(mir::frontend::Session const* session) = 0;
+    virtual void remove(std::shared_ptr<mir::scene::Session> const& session) = 0;
+    virtual void mark_ready(mir::scene::Session const* session) = 0;
 
 protected:
     SessionMonitor() = default;
diff --git a/src/session_switcher.cpp b/src/session_switcher.cpp
index 2080f64..c38bf99 100644
--- a/src/session_switcher.cpp
+++ b/src/session_switcher.cpp
@@ -22,7 +22,7 @@
 #include "spinner.h"
 #include "screen.h"
 
-#include <mir/frontend/session.h>
+#include <mir/scene/session.h>
 
 usc::SessionSwitcher::SessionSwitcher(std::shared_ptr<Spinner> const& spinner)
     : spinner_process{spinner},
@@ -64,7 +64,7 @@ void usc::SessionSwitcher::add(std::shared_ptr<Session> const& session, pid_t pi
     update_displayed_sessions();
 }
 
-void usc::SessionSwitcher::remove(std::shared_ptr<mir::frontend::Session> const& session)
+void usc::SessionSwitcher::remove(std::shared_ptr<mir::scene::Session> const& session)
 {
     std::lock_guard<std::mutex> lock{mutex};
 
@@ -105,7 +105,7 @@ void usc::SessionSwitcher::set_next_session(std::string const& name)
     update_displayed_sessions();
 }
 
-void usc::SessionSwitcher::mark_ready(mir::frontend::Session const* session)
+void usc::SessionSwitcher::mark_ready(mir::scene::Session const* session)
 {
     std::lock_guard<std::mutex> lock{mutex};
 
diff --git a/src/session_switcher.h b/src/session_switcher.h
index 4e23543..c3e83b7 100644
--- a/src/session_switcher.h
+++ b/src/session_switcher.h
@@ -41,8 +41,8 @@ public:
 
     /* From SessionMonitor */
     void add(std::shared_ptr<Session> const& session, pid_t pid) override;
-    void remove(std::shared_ptr<mir::frontend::Session> const& session) override;
-    void mark_ready(mir::frontend::Session const* session) override;
+    void remove(std::shared_ptr<mir::scene::Session> const& session) override;
+    void mark_ready(mir::scene::Session const* session) override;
 
     /* From DMMessageHandler */
     void set_active_session(std::string const& name) override;
diff --git a/src/window_manager.cpp b/src/window_manager.cpp
index 4e7cfec..41862f8 100644
--- a/src/window_manager.cpp
+++ b/src/window_manager.cpp
@@ -74,7 +74,7 @@ public:
         focus_controller.set_focus_to(scene_session, surface);
     }
 
-    bool corresponds_to(mir::frontend::Session const* s) override
+    bool corresponds_to(mir::scene::Session const* s) override
     {
         return scene_session.get() == s;
     }
diff --git a/tests/unit-tests/test_session_switcher.cpp b/tests/unit-tests/test_session_switcher.cpp
index 69b1e31..393323e 100644
--- a/tests/unit-tests/test_session_switcher.cpp
+++ b/tests/unit-tests/test_session_switcher.cpp
@@ -22,7 +22,7 @@
 #include "src/spinner.h"
 #include "usc/test/mock_screen.h"
 
-#include "mir/frontend/session.h"
+#include "mir/scene/session.h"
 #include <mir/version.h>
 
 #include <gtest/gtest.h>
@@ -93,48 +93,54 @@ private:
     }
 };
 
-class StubMirSession : public mir::frontend::Session
+class StubMirSession : public mir::scene::Session
 {
 public:
     StubMirSession(std::string const& name)
         : name_{name}
     {}
 
-    std::shared_ptr<mir::frontend::Surface> get_surface(mir::frontend::SurfaceId surface) const override { return nullptr; }
+    std::shared_ptr<mir::compositor::BufferStream> create_buffer_stream(mir::graphics::BufferProperties const& /*props*/) override { return {}; }
+    void destroy_buffer_stream(std::shared_ptr<mir::frontend::BufferStream> const& /*stream*/) override {}
 
-    mir::frontend::BufferStreamId create_buffer_stream(mir::graphics::BufferProperties const& /*props*/) override { return {}; }
-    std::shared_ptr<mir::frontend::BufferStream> get_buffer_stream(mir::frontend::BufferStreamId /*stream*/) const override { return nullptr; }
-    void destroy_buffer_stream(mir::frontend::BufferStreamId /*stream*/) override {}
-    #if MIR_SERVER_VERSION < MIR_VERSION_NUMBER(0, 28, 0)
-    mir::graphics::BufferID create_buffer(mir::graphics::BufferProperties const&) override
-    {
-        return {};
-    }
-#if MIR_SERVER_VERSION >= MIR_VERSION_NUMBER(0, 27, 0)
-    mir::graphics::BufferID create_buffer(mir::geometry::Size, MirPixelFormat) override
-    {
-        return {};
-    }
-    mir::graphics::BufferID create_buffer(mir::geometry::Size, uint32_t, uint32_t) override
-    {
-        return {};
-    }
-#endif
-    void destroy_buffer(mir::graphics::BufferID) override
-    {
-    }
-    std::shared_ptr<mir::graphics::Buffer> get_buffer(mir::graphics::BufferID) override
-    {
-        return nullptr;
-    }
-    #endif
-    void send_error(mir::ClientVisibleError const&) override
-    {
-    }
+    void send_error(mir::ClientVisibleError const&) override {}
     std::string name() const override { return name_; }
-    void send_display_config(mir::graphics::DisplayConfiguration const&) override {}
     void send_input_config(MirInputConfig const&) override {}
 
+    pid_t process_id() const override { return -1; };
+
+    void take_snapshot(mir::scene::SnapshotCallback const&) override {};
+
+    std::shared_ptr<mir::scene::Surface> default_surface() const override { return nullptr; };
+
+    void set_lifecycle_state(MirLifecycleState state) override {};
+
+    void hide() override {};
+
+    void show() override {};
+
+    void start_prompt_session() override {};
+
+    void stop_prompt_session() override {};
+
+    void suspend_prompt_session() override {};
+
+    void resume_prompt_session() override {};
+
+    std::shared_ptr<mir::scene::Surface> create_surface(
+        std::shared_ptr<Session> const&,
+        mir::scene::SurfaceCreationParameters const&,
+        std::shared_ptr<mir::scene::SurfaceObserver> const&) override { return nullptr; };
+
+    void destroy_surface(std::shared_ptr<mir::scene::Surface> const&) override { };
+
+    std::shared_ptr<mir::scene::Surface> surface_after(
+        std::shared_ptr<mir::scene::Surface> const&) const override { return nullptr; };
+
+    void configure_streams(
+        mir::scene::Surface& surface,
+        std::vector<mir::shell::StreamSpecification> const& config) override { };
+
 private:
     std::string const name_;
 };
@@ -174,12 +180,12 @@ public:
         fake_scene.raise(this);
     }
 
-    bool corresponds_to(mir::frontend::Session const* s) override
+    bool corresponds_to(mir::scene::Session const* s) override
     {
         return s == mir_stub_session.get();
     }
 
-    std::shared_ptr<mir::frontend::Session> corresponding_session()
+    std::shared_ptr<mir::scene::Session> corresponding_session()
     {
         return mir_stub_session;
     }
-- 
2.27.0

