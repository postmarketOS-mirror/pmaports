From 4b8fb02401e9996feb803bf9113c256f9f4019df Mon Sep 17 00:00:00 2001
From: Luca Weiss <luca@z3ntu.xyz>
Date: Sat, 17 Apr 2021 11:25:01 +0200
Subject: [PATCH 7/8] gmenumodel isn't renamed

https://github.com/AyatanaIndicators/qmenumodel/issues/3
---
 .../NotificationMenuItemFactory.qml           |  6 ++---
 qml/Panel/Indicators/IndicatorItem.qml        |  6 ++---
 .../Indicators/IndicatorMenuItemFactory.qml   | 24 +++++++++----------
 .../Indicators/MessageMenuItemFactory.qml     |  6 ++---
 qml/Wizard/Pages/30-wifi.qml                  |  2 +-
 tests/mocks/QMenuModel/qmldir                 |  2 +-
 tests/mocks/QMenuModel/unitymenumodel.cpp     |  4 ++--
 tests/mocks/QMenuModel/unitymenumodel.h       |  6 ++---
 8 files changed, 28 insertions(+), 28 deletions(-)

diff --git a/qml/Notifications/NotificationMenuItemFactory.qml b/qml/Notifications/NotificationMenuItemFactory.qml
index d1a270c82..8c825305e 100644
--- a/qml/Notifications/NotificationMenuItemFactory.qml
+++ b/qml/Notifications/NotificationMenuItemFactory.qml
@@ -164,7 +164,7 @@ Loader {
 
             property var extendedData: menuData && menuData.ext || undefined
 
-            property var pinMinMaxAction : LomiriMenuAction {
+            property var pinMinMaxAction : UnityMenuAction {
                 model: menuModel
                 index: menuIndex
                 name: getExtendedProperty(extendedData, "xCanonicalPinMinMax", "")
@@ -181,7 +181,7 @@ Loader {
                 }
             }
 
-            property var popupAction: LomiriMenuAction {
+            property var popupAction: UnityMenuAction {
                 model: menuModel
                 index: menuIndex
                 name: getExtendedProperty(extendedData, "xCanonicalPinPopup", "")
@@ -203,7 +203,7 @@ Loader {
                     errorAction.activate();
                 }
             }
-            property var errorAction: LomiriMenuAction {
+            property var errorAction: UnityMenuAction {
                 model: menuModel
                 index: menuIndex
                 name: getExtendedProperty(extendedData, "xCanonicalPinError", "")
diff --git a/qml/Panel/Indicators/IndicatorItem.qml b/qml/Panel/Indicators/IndicatorItem.qml
index 641dc7268..c0d160f32 100644
--- a/qml/Panel/Indicators/IndicatorItem.qml
+++ b/qml/Panel/Indicators/IndicatorItem.qml
@@ -274,21 +274,21 @@ IndicatorDelegate {
         }
     }
 
-    LomiriMenuAction {
+    UnityMenuAction {
         id: secondaryAction
         model: menuModel
         index: 0
         name: rootActionState.secondaryAction
     }
 
-    LomiriMenuAction {
+    UnityMenuAction {
         id: scrollAction
         model: menuModel
         index: 0
         name: rootActionState.scrollAction
     }
 
-    LomiriMenuAction {
+    UnityMenuAction {
         id: submenuAction
         model: menuModel
         index: 0
diff --git a/qml/Panel/Indicators/IndicatorMenuItemFactory.qml b/qml/Panel/Indicators/IndicatorMenuItemFactory.qml
index 707d88acc..34cc46274 100644
--- a/qml/Panel/Indicators/IndicatorMenuItemFactory.qml
+++ b/qml/Panel/Indicators/IndicatorMenuItemFactory.qml
@@ -200,7 +200,7 @@ Item {
                 onSyncTriggered: menuModel.changeState(menuIndex, value)
             }
 
-            LomiriMenuAction {
+            UnityMenuAction {
                 model: menuModel
                 index: menuIndex
                 name: getExtendedProperty(extendedData, "xCanonicalSyncAction", "")
@@ -410,7 +410,7 @@ Item {
             checked: serverChecked
             highlightWhenPressed: false
 
-            property var subtitleAction: LomiriMenuAction {
+            property var subtitleAction: UnityMenuAction {
                 model: menuModel
                 index: menuIndex
                 name: getExtendedProperty(extendedData, "xCanonicalSubtitleAction", "")
@@ -681,7 +681,7 @@ Item {
             property var extendedData: menuData && menuData.ext || undefined
             property bool serverChecked: menuData && menuData.isToggled || false
 
-            property var strengthAction: LomiriMenuAction {
+            property var strengthAction: UnityMenuAction {
                 model: menuModel
                 index: menuIndex
                 name: getExtendedProperty(extendedData, "xCanonicalWifiApStrengthAction", "")
@@ -744,42 +744,42 @@ Item {
             property var extendedData: menuData && menuData.ext || undefined
             highlightWhenPressed: false
 
-            property var statusLabelAction: LomiriMenuAction {
+            property var statusLabelAction: UnityMenuAction {
                 model: menuModel
                 index: menuIndex
                 name: getExtendedProperty(extendedData, "xCanonicalModemStatusLabelAction", "")
             }
             statusText: statusLabelAction.valid ? statusLabelAction.state : ""
 
-            property var statusIconAction: LomiriMenuAction {
+            property var statusIconAction: UnityMenuAction {
                 model: menuModel
                 index: menuIndex
                 name: getExtendedProperty(extendedData, "xCanonicalModemStatusIconAction", "")
             }
             statusIcon: statusIconAction.valid ? statusIconAction.state : ""
 
-            property var connectivityIconAction: LomiriMenuAction {
+            property var connectivityIconAction: UnityMenuAction {
                 model: menuModel
                 index: menuIndex
                 name: getExtendedProperty(extendedData, "xCanonicalModemConnectivityIconAction", "")
             }
             connectivityIcon: connectivityIconAction.valid ? connectivityIconAction.state : ""
 
-            property var simIdentifierLabelAction: LomiriMenuAction {
+            property var simIdentifierLabelAction: UnityMenuAction {
                 model: menuModel
                 index: menuIndex
                 name: getExtendedProperty(extendedData, "xCanonicalModemSimIdentifierLabelAction", "")
             }
             simIdentifierText: simIdentifierLabelAction.valid ? simIdentifierLabelAction.state : ""
 
-            property var roamingAction: LomiriMenuAction {
+            property var roamingAction: UnityMenuAction {
                 model: menuModel
                 index: menuIndex
                 name: getExtendedProperty(extendedData, "xCanonicalModemRoamingAction", "")
             }
             roaming: roamingAction.valid ? roamingAction.state : false
 
-            property var unlockAction: LomiriMenuAction {
+            property var unlockAction: UnityMenuAction {
                 model: menuModel
                 index: menuIndex
                 name: getExtendedProperty(extendedData, "xCanonicalModemLockedAction", "")
@@ -893,17 +893,17 @@ Item {
             property int menuIndex: -1
             property var extendedData: menuData && menuData.ext || undefined
 
-            property var playAction: LomiriMenuAction {
+            property var playAction: UnityMenuAction {
                 model: menuModel
                 index: menuIndex
                 name: getExtendedProperty(extendedData, "xCanonicalPlayAction", "")
             }
-            property var nextAction: LomiriMenuAction {
+            property var nextAction: UnityMenuAction {
                 model: menuModel
                 index: menuIndex
                 name: getExtendedProperty(extendedData, "xCanonicalNextAction", "")
             }
-            property var previousAction: LomiriMenuAction {
+            property var previousAction: UnityMenuAction {
                 model: menuModel
                 index: menuIndex
                 name: getExtendedProperty(extendedData, "xCanonicalPreviousAction", "")
diff --git a/qml/Panel/Indicators/MessageMenuItemFactory.qml b/qml/Panel/Indicators/MessageMenuItemFactory.qml
index e5a794c71..a9e269669 100644
--- a/qml/Panel/Indicators/MessageMenuItemFactory.qml
+++ b/qml/Panel/Indicators/MessageMenuItemFactory.qml
@@ -138,7 +138,7 @@ Loader {
                                                      priv.actionsDescription[0] :
                                                      undefined
 
-            property var replyAction: QMenuModel.LomiriMenuAction {
+            property var replyAction: QMenuModel.UnityMenuAction {
                 model: menuModel
                 index: menuIndex
                 name: getExtendedProperty(replyActionDescription, "name", "")
@@ -191,12 +191,12 @@ Loader {
             property var replyActionDescription: priv.actionsDescription && priv.actionsDescription.length > 1 ?
                                                      priv.actionsDescription[1] : undefined
 
-            property var activateAction: QMenuModel.LomiriMenuAction {
+            property var activateAction: QMenuModel.UnityMenuAction {
                 model: menuModel
                 index: menuIndex
                 name: getExtendedProperty(activateActionDescription, "name", "")
             }
-            property var replyAction: QMenuModel.LomiriMenuAction {
+            property var replyAction: QMenuModel.UnityMenuAction {
                 model: menuModel
                 index: menuIndex
                 name: getExtendedProperty(replyActionDescription, "name", "")
diff --git a/qml/Wizard/Pages/30-wifi.qml b/qml/Wizard/Pages/30-wifi.qml
index 989739c65..51e1d0da5 100644
--- a/qml/Wizard/Pages/30-wifi.qml
+++ b/qml/Wizard/Pages/30-wifi.qml
@@ -90,7 +90,7 @@ LocalComponents.Page {
             property QtObject menuData: null
             property var lomiriMenuModel: menuModel
             property var extendedData: menuData && menuData.ext || undefined
-            property var strengthAction: QMenuModel.LomiriMenuAction {
+            property var strengthAction: QMenuModel.UnityMenuAction {
                 model: lomiriMenuModel
                 index: menuIndex
                 name: getExtendedProperty(extendedData, "xCanonicalWifiApStrengthAction", "")
diff --git a/tests/mocks/QMenuModel/qmldir b/tests/mocks/QMenuModel/qmldir
index c17935e3f..cd5689dd6 100644
--- a/tests/mocks/QMenuModel/qmldir
+++ b/tests/mocks/QMenuModel/qmldir
@@ -3,4 +3,4 @@ plugin qmenumodel
 typeinfo QMenuModel.qmltypes
 
 QDBusActionGroup 0.1 QDBusActionGroup.qml
-LomiriMenuAction 0.1 LomiriMenuAction.qml
+UnityMenuAction 0.1 UnityMenuAction.qml
diff --git a/tests/mocks/QMenuModel/unitymenumodel.cpp b/tests/mocks/QMenuModel/unitymenumodel.cpp
index 73b28c0f3..b62692271 100644
--- a/tests/mocks/QMenuModel/unitymenumodel.cpp
+++ b/tests/mocks/QMenuModel/unitymenumodel.cpp
@@ -301,10 +301,10 @@ void UnityMenuModel::changeState(int, const QVariant&)
 {
 }
 
-void UnityMenuModel::registerAction(LomiriMenuAction*)
+void UnityMenuModel::registerAction(UnityMenuAction*)
 {
 }
 
-void UnityMenuModel::unregisterAction(LomiriMenuAction*)
+void UnityMenuModel::unregisterAction(UnityMenuAction*)
 {
 }
diff --git a/tests/mocks/QMenuModel/unitymenumodel.h b/tests/mocks/QMenuModel/unitymenumodel.h
index d21103f9b..d239a5ef3 100644
--- a/tests/mocks/QMenuModel/unitymenumodel.h
+++ b/tests/mocks/QMenuModel/unitymenumodel.h
@@ -21,7 +21,7 @@
 
 #include <QAbstractListModel>
 class QQmlComponent;
-class LomiriMenuAction;
+class UnityMenuAction;
 class ActionStateParser;
 
 class Q_DECL_EXPORT UnityMenuModel : public QAbstractListModel
@@ -76,8 +76,8 @@ public:
     Q_INVOKABLE void aboutToShow(int index);
     Q_INVOKABLE void changeState(int index, const QVariant& parameter);
 
-    void registerAction(LomiriMenuAction* action);
-    void unregisterAction(LomiriMenuAction* action);
+    void registerAction(UnityMenuAction* action);
+    void unregisterAction(UnityMenuAction* action);
 
 Q_SIGNALS:
     void busNameChanged();
-- 
2.31.1

